# Results

## Visual inspection

![Polymer disks after 30 day in sea incubation. Top row: Plastic. Bottom row: Paper.](_images/loupe-sea.jpg){#fig-result-sea}

![Polymer disks after 30 day lake incubation. Top row: Plastic. Bottom row: Paper.](_images/loupe-lake.jpg){#fig-result-lake}

## Data set structure

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(ggrepel)
library(tidymodels)
library(gt)

pressures <- read_csv("_data/pressures.csv")

levels_habitat <- c("lake", "sea", "blank")
levels_treatment <- c("paper", "plastic", "control", "blank")

labels_habitat <-
  c(
    lake     = "Lake",
    sea      = "Sea",
    blank    = "Empty reactors"
  )
labels_treatment <- 
  c(
    paper    = "Paper",
    plastic  = "Plastic",
    control  = "Control",
    blank    = "Blank"
  )

pressures <- pressures |> 
  mutate(
    habitat = habitat |> fct(levels = levels_habitat),
    treatment = treatment |> fct(levels = levels_treatment),
    time = time / (60 * 24)
  )

blanks <- pressures |> 
  filter(habitat == "blank", reactor != "B27") |> 
  summarize(
    blk_pressure = mean(pressure),
    .by = time
  )

pressures <- pressures |> 
  left_join(blanks, by = join_by(time)) |> 
  mutate(adj_pressure = pressure - blk_pressure)

tm <- 25 + 273.15 # sample temperature in Kelvin
t0 <- 273.15 # reference temperature in Kelvin
a <- 0.03103 # Bunsen absorption coefficient
r <- 83.144 # gas constant in L.hpa/mol.K
mo2 <- 32000 # oxygen gas molecular weight in mg/mol
vt <- 995 # reactor volume in mL
sv <- 260 # sample volume in mL.

pressures <- pressures |> 
  mutate(bod = mo2 / (r * tm) * ((vt - sv) / sv + a * tm / t0) * -adj_pressure)

# pressures <- 
#   pressures |> 
#   mutate(outliers = if_else(reactor %in% c("L13", "L17", "L18"), TRUE, FALSE))
```

The OxiTop Control system measured pressure differences inside the reactor since the beginning of the incubation (@fig-pressures).

```{r}
#| label: fig-pressures
#| fig-cap: Pressure difference evolution during the incubation. Lines represent individual reactor jars measures.

pressures |> 
  # filter(time %% 1 == 0) |> 
  ggplot(aes(x = time, y = pressure, group = reactor)) +
  geom_hline(yintercept = 0, linewidth = 2, color = "white") +
  geom_line(alpha = .5) +
  annotate(
    geom = "segment",
    arrow = arrow(type = "open", length = unit(.1, "inch")),
    x    = 10, y    = -30,
    xend = 14, yend = -11
  ) +
  annotate(
    geom = "segment",
    arrow = arrow(type = "open", length = unit(.1, "inch")),
    x    = 10, y    = -30,
    xend = 15, yend = -15
  ) +
  annotate(
    geom = "segment",
    arrow = arrow(type = "open", length = unit(.1, "inch")),
    x    = 10, y    = -30,
    xend = 16, yend = -22
  ) +
    annotate(
    geom = "label", label = "Reactors\n(n = 30)", size = 5,
    x = 10, y = -30
  ) +
  labs(x = "Time (days)", y = "Pressure difference (hPa)")
```

```{r}
#| label: fig-blanks
#| fig-cap: Pressure difference evolution inside empty reactors.

pressures |> 
  filter(treatment == "blank") |> 
  ggplot(aes(x = time, y = pressure, group = reactor)) +
  geom_hline(yintercept = 0, linewidth = 2, color = "white") +
  geom_line(linewidth = 1, alpha = .5) +
  facet_wrap(~ habitat, labeller = as_labeller(labels_habitat)) +
  annotate(
    geom = "segment", arrow = arrow(type = "open", length = unit(.1, "inch")),
    x    = 10, y    = 6,
    xend =  3, yend = 4
  ) +
  annotate(
    geom = "label", label = "Failed reactor", size = 5,
    x = 10, y = 6
  ) +
  labs(x = "Time (days)", y = "Pressure difference (hPa)")
```
## Habitat characterization

This section aims to compare oxygen demand between the aquatic environment recreated in the experiment. For purposes of characterization of baseline conditions, only data from reactors not containing specimens —negative controls in section 4.2— are evaluated. It is important to note that the conditions recreated in the laboratory are not intended to represent the whole aquatic environments. They resemble the local conditions from the geographic locations in which water and sediment were collected, in this case the Playa de los Boliches and Playa del Pantano de la Breña, for the sea and water environments, respectively.
BOD in benthic habitats is affected by multiple factors including temperature, microbial community, nutrient concentration, dissolved organic matter (DOM) and particulate organic matter (POM). Incubation temperature remained at 25 ºC, which is higher that environmental conditions. This unrealistic temperature was set to accelerate BOD, which increased the change of measuring significative differences within the reduced experiment duration of 30 days. Microbial communities were naturally occurring, contained in the unfiltered water and sediment from the respective samples. Nutrient concentration was conserved from the field samples. It’s important to note that from field sampling to experimental setup slight variations happened in the storing facility, however they were minimized as storing temperature of 7 ºC.
BOD30 remained below 60 mg O2 L-1 in the sea habitat while the lake was higher than 90 mg O2 L-1. This significative difference evidences a higher microbial activity in fresh water over sea water.

```{r}
pressures |> 
  filter(treatment == "control") |> 
  ggplot(aes(x = time, y = bod, color = habitat, group = reactor)) +
  geom_line()
```


## BOD

```{r}
#| label: fig-summary
#| fig-cap: Biological oxygen demand evolution summary. Columns represent mean values and error bars the standard error.

pressures |> 
  filter(habitat != "blank", time %% 5 == 0, time > 0) |> 
  ggplot(aes(x = time, y = bod, fill = treatment)) +
  geom_bar(stat = "summary", position = "dodge", fun = mean) +
  geom_errorbar(stat = "summary", position = "dodge", fun.data = mean_se) +
  facet_wrap(~ habitat, scale = "free_y", labeller = as_labeller(labels_habitat)) +
  scale_x_continuous(breaks = seq(5, 30, 5))  +
  scale_fill_discrete(labels = labels_treatment, name = NULL) +
  labs(x = "Time (days)", y = "Oxygen demand (mg/L)") +
  theme(
    legend.position = "inside", legend.position.inside = c(.1, .8)
  )
```
## Curves

```{r}
#| label: fig-curves
#| fig-cap: Smoothed summary BOD curves using local polynomial regression fitting[^results-1].

pressures |>
  filter(treatment != "blank") |> 
  ggplot(aes(x = time, y = bod, color = treatment)) +
  geom_smooth(method = "loess", formula = y ~ x, se = FALSE) +
  scale_color_discrete(name = NULL, labels = labels_treatment) +
  facet_wrap(
    ~ habitat, scales = "free_y", labeller = as_labeller(labels_habitat)
  ) +
  labs(x = "Time (days)", y = "Oxygen demand (mg/L)") +
  theme(legend.position = "inside", legend.position.inside = c(0.1, .8))
```

[^results-1]: Regression curves calculated with the R function `ggplot2::geom_smooth(method = "loess", formula = y ~ x)` for visualization purposes only.

## Modelling

```{r}
#| label: fitting

library(nls.multstart)
set.seed(124)

fits <- pressures |> 
  filter(habitat != "blank") |> 
  group_by(reactor, habitat, treatment) |> 
  nest() |> 
  ungroup() |> 
  mutate(
    linear = map(data, ~ lm(bod ~ time, data = .x)),
    single_exp = map(data, ~ nls_multstart(
      bod ~ l * (1 - exp(-k * time)),
      data = .x,
      iter = 250,
      start_lower = c(l = 0, k = .1),
      start_upper = c(l = 1000, k = 10),
      lower = c(l = 0, k = 0),
      supp_errors = "Y",
      
    )),
    double_exp = map(data, ~ nls_multstart(
      bod ~ l1 * (1 - exp(-k1 * time)) + l2 * (1 - exp(-k2 * time)),
      data = .x,
      iter = 250,
      start_lower = c(l1 = 0, l2 = 0, k1 = 1e-5, k2 = 1e-10),
      start_upper = c(l1 = 500, l2 = 1000, k1 = 10, k2 = 10),
      lower = c(l1 = 0, k1 = 0, l2 = 0, k2 = 0),
      supp_errors = "Y"
    ))
  ) 

fits <- fits |> 
  pivot_longer(
    c(linear, single_exp, double_exp),
    names_to = "model", values_to = "fit"
  ) |> 
  mutate(
    resids = map(fit, residuals),
    metrics = map(fit, glance),
    params = map(fit, tidy),
    preds = map(fit, augment)
  )
```



```{r}
# fits |> unnest(params) |> 
#   filter(model == "double_exp", p.value < 0.01) |> 
#   ggplot(aes(x = estimate, y = reactor, color = treatment)) +
#   geom_point() +
#   facet_grid(habitat ~ term, scales = "free")
```


```{r}
# fits |> 
#   unnest(data) |> 
#   ggplot(aes(x = time, y = bod)) +
#   geom_point() +
#   geom_line(
#     data = unnest(fits, preds) |> filter(model == "linear"),
#     aes(y = .fitted, color = model, group = reactor),
#     color = "blue"
#     ) +
#   geom_line(
#     data = unnest(fits, preds) |> filter(model == "double_exp"),
#     aes(y = .fitted, color = model, group = reactor),
#     color = "red"
#     ) +
#   geom_line(
#     data = unnest(fits, preds) |> filter(model == "single_exp"),
#     aes(y = .fitted, color = model, group = reactor),
#     color = "green"
#     ) +
#   facet_grid(habitat ~ treatment, scales = "free_y")
```


```{r}
#| label: eg-reactors
#| include: false

eg_reactors <- fits |> filter(reactor %in% c("S05", "L17"), model != "linear")

eg_reactors |> unnest(params) |>
  select(reactor, term, estimate) |>
  pivot_wider(names_from = term, values_from = estimate) |> 
  mutate(
    across(starts_with("l"), \(l) round(l, 0)),
    across(starts_with("k"), \(k) round(k, 2))
  )

labels <- 
  tribble(
    ~ reactor, ~ model, ~ label,
    "S05", "single_exp", "BOD[t]==42*(1-e^{-0.14*t})",
    "S05", "double_exp", "BOD[t]==15*(1-e^{-5.22*t})+46*(1-e^{-0.03*t})",
    "L17", "single_exp", "BOD[t]==69*(1-e^{-0.10*t})",
    "L17", "double_exp", "BOD[t]==22*(1-e^{-5.10*t})+117*(1-e^{-0.02*t})"
  )

label_fits <- eg_reactors |> unnest(preds) |> 
  filter(time == 29) |> 
  select(reactor, model, time, .fitted) |>
  left_join(labels)
```

```{r}
#| label: fig-fits
#| fig-cap: Model fits representation over the original data. Curves form plastic incubated reactors.

eg_reactors |> unnest(data) |> 
  ggplot(aes(x = time, y = bod)) +
  geom_point(alpha = .1) +
  geom_line(
    data = unnest(eg_reactors, preds),
    aes(y = .fitted, color = model), show.legend = F,
    linewidth = 1,
  ) +
  geom_label_repel(
    data = label_fits, aes(y = .fitted, label = label, color = model),
    parse = T, show.legend = F,
    size = 3,
    nudge_x = -30,
    nudge_y = 10
  ) +
  facet_wrap(
    ~ reactor, scales = "free_y",
    labeller = as_labeller(c(L17 = "Lake - Plastic", S05 = "Sea - Plastic"))
  ) +
  labs(x = "Time (days)", y = "Oxygen demand (mg/L)")
```


