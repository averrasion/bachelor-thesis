# Results

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(tidymodels)
library(gt)

pressures <- read_csv("_data/pressures.csv")

levels_habitat <- c("lake", "sea", "blank")
levels_treatment <- c("paper", "plastic", "control", "blank")

labels_habitat <-
  c(
    lake     = "Lake",
    sea      = "Sea",
    blank    = "Empty reactors"
  )
labels_treatment <- 
  c(
    paper    = "Paper",
    plastic  = "Plastic",
    control  = "Control",
    blank    = "Blank"
  )

pressures <- 
  pressures |> 
  mutate(
    habitat = habitat |> fct(levels = levels_habitat),
    treatment = treatment |> fct(levels = levels_treatment),
    time = time / (60 * 24)
  )

blanks <- 
  pressures |> 
  filter(habitat == "blank") |> 
  filter(reactor != "B27") |> 
  summarize(
    blk_pressure = mean(pressure),
    .by = time
  )

pressures <- 
  pressures |> 
  left_join(blanks, by = join_by(time)) |> 
  mutate(adj_pressure = pressure - blk_pressure)

tm <- 25 + 273.15 # sample temperature in Kelvin
t0 <- 273.15 # reference temperature in Kelvin
a <- 0.03103 # Bunsen absorption coefficient
r <- 83.144 # gas constant in L.hpa/mol.K
mo2 <- 32000 # oxygen gas molecular weight in mg/mol
vt <- 995 # reactor volume in mL
sv <- 260 # sample volume in mL.

pressures <- 
  pressures |> 
  mutate(bod = mo2 / (r * tm) * ((vt - sv) / sv + a * tm / t0) * -adj_pressure)

# pressures <- 
#   pressures |> 
#   mutate(outliers = if_else(reactor %in% c("L13", "L17", "L18"), TRUE, FALSE))
```

## Dataset structure

It would be cool to have a table here with the number of reactors for each treatment and habitat.

The OxiTop Control system measured pressure differences inside the reactor since the start of the incubation.

::: {#fig-raw}
```{r}
pressures |> 
  filter(time %% 1 == 0) |> 
  ggplot(aes(x = time, y = pressure, group = reactor)) +
  geom_line(alpha = .5) +
  annotate(
    geom = "segment",
    arrow = arrow(type = "open", length = unit(10, "points")),
    x    = 10, y    = -30,
    xend = 14, yend = -11
  ) +
  annotate(
    geom = "segment",
    arrow = arrow(type = "open", length = unit(10, "points")),
    x    = 10, y    = -30,
    xend = 15, yend = -15
  ) +
  annotate(
    geom = "segment",
    arrow = arrow(type = "open", length = unit(10, "points")),
    x    = 10, y    = -30,
    xend = 16, yend = -22
  ) +
    annotate(
    geom = "label", label = "Reactors\n(n = 30)", size = 5,
    x = 10, y = -30
  ) +
  labs(x = "Time (days)", y = "Pressure difference (hPa)")
```

Pressure difference evolution during the incubation. Lines represent individual reactor jars daily measures.
:::

## Pressure adjustment

Differences in pressure are adjusted offsetting from the mean value in the empty reactors---also called blanks. During the first couple of days, all blanks rose to approximately 9 hPa over the starting pressure (@fig-blanks). The response is likely due to warming air inside the reactor, because the incubator chamber was at 25Â°C, which was slightly above room temperature.

Reactor B27 lost pressure early in the experiment and dropped to zero, this behavior implies evident sealing defects and the reactor was not considered for the analysis.

Our goal is to measure differences in pressure due to oxygen consumption ---or CO-2- production---, so we neutralized the effect of temperature by adjusting the pressure difference with the formula:

$p_{OD} = p - \overline{p}_{blanks}$

Were $p_{OD}$ is the pressure difference driven by oxygen consumption, $p$ is the relative pressure of the reactors containing benthic habitats, and $\overline{p}_{blanks}$ is the average relative pressure measured in empty reactors ---excluding reactor B27.

::: {#fig-blanks}
```{r}
pressures |> 
  filter(treatment == "blank", time %% 1 == 0) |> 
  ggplot(aes(x = time, y = pressure, group = reactor)) +
  geom_line(linewidth = 1, alpha = .5) +
  facet_wrap(~ habitat, labeller = as_labeller(labels_habitat)) +
  annotate(
    geom = "segment", arrow = arrow(type = "open", length = unit(10, "points")),
    x    = 10, y    = 6,
    xend =  3, yend = 4
  ) +
  annotate(
    geom = "label", label = "Reactor B27", size = 5,
    x = 10, y = 6
  ) +
  labs(x = "Time (days)", y = "Pressure difference (hPa)")
```

Pressure difference evolution inside empty reactors. Reactor B27 annotated as outlier, probably due to sealing failure.
:::

::: {#fig-summary}
```{r}
pressures |> 
  filter(habitat != "blank", time %% 5 == 0, time > 0) |> 
  ggplot(aes(x = time, y = bod, fill = treatment)) +
  geom_bar(stat = "summary", position = "dodge", fun = mean) +
  geom_errorbar(stat = "summary", position = "dodge", fun.data = mean_se) +
  facet_wrap(~ habitat, scale = "free_y", labeller = as_labeller(labels_habitat)) +
  scale_x_continuous(breaks = seq(5, 30, 5))  +
  scale_fill_discrete(labels = labels_treatment, name = NULL) +
  labs(x = "Time (days)", y = "Oxygen demand (mg/L)") +
  theme(
    legend.position = "inside", legend.position.inside = c(.1, .8)
  )
```

Biological oxygen demand evolution summary. Bars represent mean values and error bars standard error.
:::

::: {#fig-curves}
```{r}
library(ggrepel)
set.seed(123)

label_curves <- pressures |> 
  filter(time == 20, habitat != "blank") |> 
  group_by(habitat, treatment, time) |> 
  summarize(bod = mean(bod), .groups = "drop") |> 
  mutate(
    treatment_label = case_match(treatment,
      "paper" ~ "Paper",
      "plastic" ~ "Plastic",
      "control" ~ "Control"
    )
  )

pressures |>
  filter(treatment != "blank") |> 
  ggplot(aes(x = time, y = bod, color = treatment)) +
  geom_smooth(method = "loess", formula = y ~ x, se = FALSE) +
  geom_label_repel(
    data = label_curves,
    aes(x = time, y = bod, label = treatment_label), direction = "y"
  ) +
  facet_wrap(~ habitat, scales = "free_y", labeller = as_labeller(labels_habitat)) +
  labs(x = "Time (days)", y = "Oxygen demand (mg/L)") +
  theme(legend.position = "none")
```

Smoothed summary BOD curves using local polynomial regression fitting[^results-1].
:::

[^results-1]: Regression curves calculated with the R function `ggplot2::geom_smooth(method = "loess", formula = y \~ x)` for visualization purposes only.

## Modelling

```{r}
library(nls.multstart)

single_exp <- function(l, k, t){
  l * (1 - exp(-k * t))
}

double_exp <- function(l1, l2, k1, k2, t){
  l1 * (1 - exp(-k1 * t)) + l2 * (1 - exp(-k2 * t))
}

fits <- pressures |> 
  filter(habitat != "blank") |> 
  group_by(reactor, habitat, treatment) |> 
  nest() |> 
  mutate(
    linear = map(data, ~ lm(bod ~ time, data = .x)),
    single_exp = map(data, ~ nls_multstart(
      bod ~ single_exp(l, k, t = time),
      data = .x,
      iter = 250,
      start_lower = c(l = 0, k = .1),
      start_upper = c(l = 1000, k1 = 10),
      supp_errors = "Y"
    )),
    double_exp = map(data, ~ nls_multstart(
      bod ~ double_exp(l1, l2, k1, k2, t = time),
      data = .x,
      iter = 250,
      start_lower = c(l1 = 0, l2 = 0, k1 = .1, k2 = .001),
      start_upper = c(l1 = 500, l2 = 1000, k1 = 10, k2 = 1),
      supp_errors = "Y"
    ))
  )

fits <- fits |> 
  pivot_longer(
    c(linear, single_exp, double_exp),
    names_to = "formula", values_to = "fit"
  ) |> 
  mutate(
    metrics = map(fit, glance),
    params = map(fit, tidy),
    preds = map(fit, augment)
  )
```

